# Arquivo de configuração para o Render.com
# Versão 4.0 - Corrigindo indentação do 'disks' e estrutura do 'image'

services:
  # Serviço 1: A aplicação n8n (o cérebro)
  - type: web
    name: n8n-agencia
    env: node
    plan: starter # Plano gratuito ou 'starter' para evitar que o serviço durma
    region: oregon # ou a região de sua preferência
    buildCommand: "npm install && npm run build"
    startCommand: "npm start"
    healthCheckPath: /healthz
    envVars:
      - key: N8N_HOST
        value: n8n-agencia.onrender.com # O Render criará essa URL
      - key: N8N_PROTOCOL
        value: https
      - key: NODE_ENV
        value: production
      - key: WEBHOOK_URL
        value: https://n8n-agencia.onrender.com/
      # Conexão com o Banco de Dados
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        fromService:
          type: pserv
          name: n8n-db
          property: host
      - key: DB_POSTGRESDB_DATABASE
        fromService:
          type: pserv
          name: n8n-db
          property: database
      - key: DB_POSTGRESDB_USER
        fromService:
          type: pserv
          name: n8n-db
          property: user
      - key: DB_POSTGRESDB_PASSWORD
        fromService:
          type: pserv
          name: n8n-db
          property: password
    # Configuração do Disco Persistente para salvar workflows e credenciais
    disks: # <-- CORREÇÃO AQUI: Indentação ajustada para pertencer ao serviço 'web'
      - name: n8n-data
        mountPath: /home/node/.n8n
        sizeGB: 1

  # Serviço 2: O Banco de Dados PostgreSQL (a memória)
  - type: pserv
    name: n8n-db
    image: postgres:13 # <-- CORREÇÃO AQUI: Estrutura simplificada
    plan: free
    region: oregon
    envVars:
      - key: POSTGRES_DB
        generateValue: true
      - key: POSTGRES_USER
        generateValue: true
      - key: POSTGRES_PASSWORD
        generateValue: true
    disk:
      name: postgres-data
      sizeGB: 1
