# Define os serviços que compõem a aplicação n8n

services:
  # Serviço 1: A aplicação web n8n
  - type: web
    name: n8n-agencia
    env: node
    plan: free # Você pode ajustar o plano conforme sua necessidade
    region: oregon
    branch: main
    
    # Comandos para construir e iniciar a aplicação
    buildCommand: "npm install"
    startCommand: "npx n8n start"
    
    # Variáveis de ambiente para conectar o n8n ao banco de dados
    envVars:
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        # Render cria um nome de host interno para o serviço de banco de dados
        fromService:
          type: pserv
          name: n8n-db
          property: host
      - key: DB_POSTGRESDB_PORT
        fromService:
          type: pserv
          name: n8n-db
          property: port
      - key: DB_POSTGRESDB_DATABASE
        fromService:
          type: pserv
          name: n8n-db
          property: database
      - key: DB_POSTGRESDB_USER
        fromService:
          type: pserv
          name: n8n-db
          property: user
      - key: DB_POSTGRESDB_PASSWORD
        fromService:
          type: pserv
          name: n8n-db
          property: password

    # CORREÇÃO 1: A propriedade 'disks' foi alterada para 'volumes'
    volumes: 
      - name: n8n-data
        mountPath: /home/node/.n8n
        sizeGB: 1

  # Serviço 2: O banco de dados PostgreSQL
  - type: pserv # 'pserv' é o tipo para serviço de banco de dados PostgreSQL
    name: n8n-db
    plan: free
    region: oregon
    
    # CORREÇÃO 2: A propriedade 'image' foi expandida para um objeto com 'repository' e 'tag'
    image:
      repository: postgres
      tag: "13" # Usar aspas é uma boa prática para tags de versão
      
    disk:
      name: n8n-postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 1
